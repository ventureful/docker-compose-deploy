stages:
  - test
  - deploy
  - deploy privately

Lint:
  stage: test
  image: python
  before_script:
    - chmod 700 .
    - pip install ansible-lint==4.3.7
  script:
    - ansible-lint docker-compose-app.yml

Simulate:
  stage: test
  image: ubuntu:18.04
  before_script:
    - chmod 700 .
    - apt update
    - apt install -y python3-pip
    - pip3 install ansible==2.10.0
  script:
    - ansible-playbook --inventory localhost, --connection=local
      docker-compose-app.yml
    - until docker-compose logs print-hello-world | grep -q "Hello, world!";
      do
        sleep 1;
        echo -n .;
      done

Build-master:
  stage: deploy
  image: docker:20.10.1
  services:
    - docker:20.10.1-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
      "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master

Build:
  stage: deploy
  image: docker:20.10.1
  services:
    - docker:20.10.1-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
      "$CI_REGISTRY"
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
  except:
    - master

Trigger Stack master:
  stage: deploy privately
  trigger:
    project: TrendDotFarm/stack
    strategy: depend
  variables:
    TAG_DEPLOYMENT: "latest"
    DEPLOYMENT_ONLY: "TRUE"
  only:
    - master

Trigger Stack:
  stage: deploy privately
  trigger:
    project: TrendDotFarm/stack
    strategy: depend
  variables:
    TAG_DEPLOYMENT: $CI_COMMIT_REF_SLUG
    DEPLOYMENT_ONLY: "TRUE"
  except:
    - master
