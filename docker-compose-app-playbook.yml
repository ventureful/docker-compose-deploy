---
- name: Deploy Docker Compose App
  hosts: all
  become: true
  gather_facts: false
  vars:
    local_dir: "{{ lookup('env','PWD') }}"
    remote_dir: "/home/{{ ansible_user }}/{{ local_dir | basename }}"
    iptables: "{{ local_dir }}/iptables.txt"
    iptables_remote: "{{ remote_dir }}/iptables.txt"
  tasks:

    # https://stackoverflow.com/a/73932621
    - name: Upgrade pip
      ansible.builtin.pip:
        name: pip
        extra_args: --upgrade
    - name: Check if problematic file exists
      ansible.builtin.stat:
        path: /usr/lib/python3/dist-packages/OpenSSL/crypto.py
      register: problematic_stat
    - name: Upgrade pyopenssl
      ansible.builtin.pip:
        name: pyopenssl
        extra_args: --upgrade
      when: problematic_stat.stat.exists

    - name: Install aptitude using apt
      ansible.builtin.apt:
        name: aptitude
        update_cache: true
        force_apt_get: true

    - name: Install required system packages
      ansible.builtin.apt:
        name: "{{ item }}"
      loop: ['apt-transport-https', 'ca-certificates', 'curl',
             'software-properties-common', 'python3-pip', 'virtualenv',
             'python3-setuptools']

    - name: Add Docker GPG apt key
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable

    - name: Update apt and install docker-ce
      ansible.builtin.apt:
        name: docker-ce
        update_cache: true

    - name: Install docker-compose
      ansible.builtin.pip:
        name: docker-compose

    - name: Log in to GitLab Docker registry if available
      docker_login:
        username: "{{ lookup('env','CI_REGISTRY_USER') }}"
        password: "{{ lookup('env','CI_REGISTRY_PASSWORD') }}"
        registry: "{{ lookup('env','CI_REGISTRY') }}"
      when: lookup('env','CI_REGISTRY') | length > 0

    - name: Create target directory
      become: false
      ansible.builtin.file:
        path: "{{ remote_dir }}"
        state: directory
        mode: 0700

    - name: Upload docker-compose definitions
      become: false
      ansible.builtin.copy:
        src: "{{ local_dir }}/{{ item }}"
        dest: "{{ remote_dir }}"
        mode: 0600
      loop:
        - .env
        - docker-compose.yml

    - name: Create and start services
      community.docker.docker_compose:
        project_src: "{{ remote_dir }}"
        build: true
        pull: true
