---
- name: Deploy Docker Compose App
  hosts: all
  become: yes
  gather_facts: no
  vars:
    local_dir: "{{ lookup('env','PWD') }}"
    remote_dir: "/home/{{ ansible_user }}/{{ local_dir | basename }}"
  tasks:
    - name: Install aptitude using apt
      apt:
        name: aptitude
        update_cache: yes
        force_apt_get: yes

    - name: Install required system packages
      apt:
        name: "{{ item }}"
      loop: ['apt-transport-https', 'ca-certificates', 'curl',
             'software-properties-common', 'python3-pip', 'virtualenv',
             'python3-setuptools']

    - name: Add Docker GPG apt key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg

    - name: Add Docker repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        update_cache: yes

    - name: Upgrade pip
      pip:
        name: pip
        extra_args: --upgrade

    - name: Install docker-compose
      pip:
        name: docker-compose

    - name: Log in to GitLab Docker registry if available
      docker_login:
        username: "{{ lookup('env','CI_REGISTRY_USER') }}"
        password: "{{ lookup('env','CI_REGISTRY_PASSWORD') }}"
        registry: "{{ lookup('env','CI_REGISTRY') }}"
      when: lookup('env','CI_REGISTRY') | length > 0

    - name: Create target directory
      become: no
      file:
        path: "{{ remote_dir }}"
        state: directory
        mode: 0700

    - name: Upload docker-compose definitions
      become: no
      copy:
        src: "{{ local_dir }}/{{ item }}"
        dest: "{{ remote_dir }}"
        mode: 0600
      loop:
        - .env
        - docker-compose.yml

    - name: Upload configuration if available
      become: no
      vars:
        configuration: "{{ local_dir }}/configuration.yml"
      copy:
        src: "{{ configuration }}"
        dest: "{{ remote_dir }}"
        mode: 0600
      when: configuration is file

    - name: Create and start services
      community.docker.docker_compose:
        project_src: "{{ remote_dir }}"
        pull: yes
